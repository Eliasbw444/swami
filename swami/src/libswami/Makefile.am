## Process this file with automake to produce Makefile.in

if PLATFORM_WIN32
no_undefined = -no-undefined -export-symbols
libswami_la_def = libswami.def
endif

if OS_WIN32
install-libtool-import-lib:
	$(INSTALL) .libs/libswami.dll.a $(DESTDIR)$(libdir)

uninstall-libtool-import-lib:
	-rm $(DESTDIR)$(libdir)/libswami.dll.a
else
install-libtool-import-lib:
uninstall-libtool-import-lib:
endif


lib_LTLIBRARIES = libswami.la
EXTRA_DIST = version.h.in marshals.list libswami.def

BUILT_SOURCES = \
	builtin_enums.c \
	builtin_enums.h \
	marshals.c \
	marshals.h

# correctly clean the generated source files
CLEANFILES = $(BUILT_SOURCES)

swami_public_h_sources = \
	SwamiContainer.h \
	SwamiControl.h \
	SwamiControlEvent.h \
	SwamiControlFunc.h \
	SwamiControlHub.h \
	SwamiControlMidi.h \
	SwamiControlProp.h \
	SwamiControlQueue.h \
	SwamiControlValue.h \
	SwamiEvent_ipatch.h \
	SwamiLock.h \
	SwamiLog.h \
	SwamiLoopFinder.h \
	SwamiLoopResults.h \
	SwamiMidiDevice.h \
	SwamiMidiEvent.h \
	SwamiObject.h \
	SwamiParam.h \
	SwamiPlugin.h \
	SwamiPropTree.h \
	SwamiRoot.h \
	SwamiWavetbl.h \
	util.h

swami_sources = \
	$(BUILT_SOURCES) \
	i18n.h \
	SwamiContainer.c \
	SwamiControl.c \
	SwamiControlEvent.c \
	SwamiControlFunc.c \
	SwamiControlHub.c \
	SwamiControlMidi.c \
	SwamiControlProp.c \
	SwamiControlQueue.c \
	SwamiControlValue.c \
	SwamiEvent_ipatch.c \
	SwamiLock.c \
	SwamiLog.c \
	SwamiLoopFinder.c \
	SwamiLoopResults.c \
	SwamiMidiDevice.c \
	SwamiMidiEvent.c \
	SwamiObject.c \
	SwamiParam.c \
	SwamiPlugin.c \
	SwamiPropTree.c \
	SwamiRoot.c \
	SwamiWavetbl.c \
	libswami.c \
	libswami.h \
	swami_priv.h \
	util.c \
	value_transform.c

libswami_la_SOURCES = $(swami_public_h_sources) $(swami_sources)
libswami_la_LDFLAGS = $(no_undefined) $(libswami_la_def) \
 @GOBJECT_LIBS@ @LIBINSTPATCH_LIBS@

if SOURCE_BUILD
PLUGINS_DIR="$(abs_top_builddir)/src/plugins/.libs"
else
PLUGINS_DIR="$(pkglibdir)"
endif

AM_CPPFLAGS = \
  -DG_LOG_DOMAIN=\"libswami\" \
  -DPLUGINS_DIR=\"$(PLUGINS_DIR)\" \
  -DLOCALEDIR=\"$(datadir)/locale\" \
  -I$(top_srcdir)/src \
  -I$(top_srcdir)/src/include \
  -I$(top_srcdir)/intl \
  -I$(top_builddir)/src \
  @GOBJECT_CFLAGS@ @LIBINSTPATCH_CFLAGS@ @APPLECF_CFLAGS@

# Installed headers
swamiincdir = $(includedir)/swami/libswami
swamiinc_HEADERS = $(swami_public_h_sources) builtin_enums.h libswami.h


marshals.c: marshals.list
	echo "/* Autogenerated file (add to marshals.list and 'make update-marshals') */" >marshals.c
	glib-genmarshal --body --prefix=swami_marshal \
	  $(srcdir)/marshals.list >>marshals.c

marshals.h: marshals.list
	echo "/* Autogenerated file (add to marshals.list and 'make update-marshals') */" >marshals.h
	glib-genmarshal --header --prefix=swami_marshal \
	  $(srcdir)/marshals.list >>marshals.h

builtin_enums.c: s-builtin-enums-c
	@true
s-builtin-enums-c: $(swami_public_h_sources) Makefile
	( cd $(srcdir) && glib-mkenums \
			--fhead "#include \"libswami.h\"\n#include \"swami_priv.h\"" \
			--fprod "\n/* enumerations from \"@filename@\" */" \
			--vhead "GType\n@enum_name@_get_type (void)\n{\n  static GType etype = 0;\n  if (etype == 0) {\n    static const G@Type@Value values[] = {" \
			--vprod "      { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
			--vtail "      { 0, NULL, NULL }\n    };\n    etype = g_@type@_register_static (\"@EnumName@\", values);\n  }\n  return etype;\n}\n" \
		$(swami_public_h_sources) ) > xgen-enumc \
	&& cp xgen-enumc builtin_enums.c  \
	&& rm -f xgen-enumc

builtin_enums.h: s-builtin-enums-h
	@true
s-builtin-enums-h: $(swami_public_h_sources) Makefile
	( cd $(srcdir) && glib-mkenums \
			--fhead "#ifndef __SWAMI_BUILTIN_ENUMS_H__\n#define __SWAMI_BUILTIN_ENUMS_H__\n\n#include <glib-object.h>\n\nG_BEGIN_DECLS\n" \
			--fprod "/* enumerations from \"@filename@\" */\n" \
			--vhead "GType @enum_name@_get_type (void);\n#define SWAMI_TYPE_@ENUMSHORT@ (@enum_name@_get_type())\n" \
			--ftail "G_END_DECLS\n\n#endif /* __SWAMI_BUILTIN_ENUMS_H__ */" \
		$(swami_public_h_sources) ) >> xgen-enumh \
	&& (cmp -s xgen-enumh builtin_enums.h || cp xgen-enumh builtin_enums.h ) \
	&& rm -f xgen-enumh

install-data-local: install-libtool-import-lib

uninstall-local: uninstall-libtool-import-lib
